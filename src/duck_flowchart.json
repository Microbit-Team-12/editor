{
  "Intro": {
    "speech": "Quack! Tell me more about the problem by selecting a button below:",
    "buttons": [
      {
        "text": "An error message is displayed",
        "link": "Select error message",
        "params": []
      },
      {
        "text": "My code doesn't do what I want it to do",
        "link": "Select the problem with your program",
        "params": []
      }
    ]
  },
  "An error message is displayed": {
    "speech": "What type of error is displayed?",
    "buttons": [
      {
        "text": "AttributeError",
        "link": "AttributeError explanation",
        "params": []
      },
      {
        "text": "SyntaxError",
        "link": "SyntaxError explanation",
        "params": []
      },
      {
        "text": "TypeError",
        "link": "TypeError explanation",
        "params": []
      },
      {
        "text": "NameError",
        "link": "NameError explanation",
        "params": []
      },
      {
        "text": "IndentationError / TabError",
        "link": "IndentationError",
        "params": []
      },
      {
        "text": "Something else / I don't know",
        "link": "Less common errors",
        "params": []
      }
    ]
  },
  "AttributeError explanation": {
    "speech": "An AttributeError tells you that a certain type (such as int or str) doesn’t have a certain attribute. For instance, if you write display.potato, Python will give an AttributeError to tell you that display has no potato attribute.",
    "buttons": [
      {
        "text": "Tell me more",
        "link": "More about AttributeError",
        "params": []
      }
    ]
  },
  "More about AttributeError": {
    "speech": "To get an AttributeError, you might have accidentally used the wrong datatype or misspelt the function you called? Or perhaps you used a capital letter by mistake – Python treats show and Show as two different things.",
    "buttons": [
      {
        "text": "Ah, that's it!",
        "link": "Goodbye",
        "params": []
      },
      {
        "text": "I still need help",
        "link": "Highlight error",
        "params": []
      },
      {
        "text": "back",
        "link": "AttributeError explanation",
        "params": []
      }
    ]
  },
  "Goodbye": {
    "speech": "I’m happy that I could help you! Now you’ve learnt something new, so you’ll know what to do next time you get that problem.\n\nRemember you can click on my icon any time if you need more help!",
    "buttons": [
      {
        "text": "Thanks Duck, bye for now!",
        "link": null,
        "params": []
      }
    ]
  },
  "Ask if following tutorial": {
    "speech": "That's alright. Are you following one of the MicroPython tutorials?",
    "buttons": [
      {
        "text": "Yes I am",
        "link": "Tutorial selection",
        "params": []
      },
      {
        "text": "No I am not",
        "link": "Duck gives up",
        "params": []
      }
    ]
  },
  "Tutorial selection": {
    "speech": "Which tutorial are you following?",
    "buttons": [
      {
        "text": "None of them",
        "link": "Duck gives up",
        "params": []
      },
      {
        "text": "Hello, World!",
        "link": "Compare with tutorial",
        "params": ["Hello, World"]
      }
    ]
  },
  "Compare with tutorial": {
    "speech": "{get_readable_diff(prev_button.params[0], error_message.line_no)}",
    "buttons": [
      {
        "text": "Thanks, I can fix that now.",
        "link": "Goodbye",
        "params": []
      },
      {
        "text": "That wasn't what I was trying to write",
        "link": "Duck gives up",
        "params": []
      }
    ]
  },
  "Duck gives up": {
    "speech": "This seems strange... Perhaps you would have better luck reading the tutorial about errors?\nHere is the link: {hyperlink(insert link here)}",
    "buttons": [
    ]
  },
  "SyntaxError Explanation": {
    "speech": "A SyntaxError might happen if you used the wrong punctuation (eg: using ‘;’ instead of ‘:’) or if you misspelt a keyword (such as for, while, if, or else). A tiny arrow symbol ( ^ ) normally points to the word that Python is confused about.",
    "buttons": [
      {
        "text": "Ah, that's it!",
        "link": "Goodbye",
        "params": []
      },
      {
        "text": "No, I still need help",
        "link": "More about SyntaxError",
        "params": []
      }
    ]
  },
  "More about SyntaxError": {
    "speech": "Sometimes a helpful message appears with a SyntaxError, such as “can’t assign to literal”. Which message do you see?",
    "buttons": [
      {
        "text": "Invalid Syntax (no further message)",
        "link": "Invalid syntax nfm explanation",
        "params": []
      },
      {
        "text": "Invalid Syntax for (number/integer with base 10)",
        "link": "Invalid syntax number explanation",
        "params": []
      },
      {
        "text": "Can't assign to [something]",
        "link": "Invalid Syntax can't assign explanation",
        "params": []
      },
      {
        "text": "Something else",
        "link": "Highlight error",
        "params": []
      }
    ]
  },
  "Invalid Syntax nfm explanation": {
    "speech": "You might get this error if you write an “empty” for loop or while loop (one with nothing in it because you didn’t indent), or if you forgot to close the square brackets at the end of a list.",
    "buttons": [
      {
        "text": "Ah, that's it!",
        "link": "Goodbye",
        "params": []
      },
      {
        "text": "No, I still need help",
        "link": "Highlight error",
        "params": []
      }
    ]
  },
  "Highlight error": {
    "speech": "Your error message tells you that the {error_message.error_type} is on line {error_message.get_line_no_and_highlight()}, so I’ve highlighted that line for you in the editor. Do you spot the mistake now?",
    "buttons": [
      {
        "text": "Thanks, thank you!",
        "link": "Goodbye",
        "params": []
      },
      {
        "text": "No, I still need help",
        "link": "Ask if following tutorial",
        "params": []
      }
    ]
  },
  "Invalid syntax number explanation": {
    "speech": "Python gives this message when you attach something confusing to the end of a number. Eg: Python knows about 3, but it doesn’t know about 3f or 3.f. If you are trying to multiply a number by a variable, use the * symbol. Or maybe you just made a typo.",
    "buttons": [
      {
        "text": "Ah, that's it!",
        "link": "Goodbye",
        "params": []
      },
      {
        "text": "I still need help",
        "link": "Highlight error",
        "params": []
      }
    ]
  },
  "Invalid Syntax can't assign explanation": {
    "speech": "Python complains that it “can’t assign to expression” if you use the single equals sign ( = ) in a place where it doesn’t belong. For example, “3 = x” would be read as “change the value of 3 to make it x. But that’s nonsense because you can’t change 3!",
    "buttons": [
      {
        "text": "Tell me more...",
        "link": "More about assignment error",
        "params": []
      }
    ]
  },
  "More about assignment error": {
    "speech": "If you’re trying to change the value of a variable, the variable name (eg: x) needs to go on the left, and the value (eg: “hello”, or 10) needs to go on the right of the = sign.\nIf you’re trying to test if 2 values are equal, use == rather than = .",
    "buttons": [
      {
        "text": "Ah, that's it!",
        "link": "Goodbye",
        "params": []
      },
      {
        "text": "I still need help",
        "link": "Highlight error",
        "params": []
      },
      {
        "text": "back",
        "link": "Invalid Syntax can't assign explanation",
        "params": []
      }
    ]
  },
  "TypeError explanation": {
    "speech": "Python throws a TypeError if you use a value in a way that doesn’t make sense for its type. For instance, “3” + 5 would throw a TypeError because you cannot add a str to an int.",
    "buttons": [
      {
        "text": "Ah, that's it!",
        "link": "Goodbye",
        "params": []
      },
      {
        "text": "I still need help",
        "link": "Highlight error",
        "params": []
      }
    ]
  },
  "NameError explanation": {
    "speech": "A NameError tells you that Python doesn’t understand a certain word that you used. Reread the error message to see which word this is. It might just be that you’ve mistyped it! Remember that Python is case-sensitive (so you mustn’t use a capital letter where it expects a lower-case one).",
    "buttons": [
      {
        "text": "Ah, that's it!",
        "link": "Goodbye",
        "params": []
      },
      {
        "text": "I still need help",
        "link": "Highlight error",
        "params": []
      }
    ]
  },
  "IndentationError explanation": {
    "speech": "The indentation is a fancy way of saying the amount of space at the beginning of the line. Within a given loop, all lines must have the same indentation. You should always use tabs rather than spaces for this.",
    "buttons": [
      {
        "text": "Ah, that's it!",
        "link": "Goodbye",
        "params": []
      }
    ]
  }
}